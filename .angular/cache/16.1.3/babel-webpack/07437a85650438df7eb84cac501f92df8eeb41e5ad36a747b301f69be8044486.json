{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductsService {\n  constructor(http) {\n    this.http = http;\n    this.BASE_URL = 'https://localhost:7052/api/';\n  }\n  getProductsPaginagtion(page, counterPerPage) {\n    return this.http.get(`https://localhost:7052/api/Products/Pagination/${page}/${counterPerPage}`);\n  }\n  getProducts() {\n    return this.http.get(`${this.BASE_URL}Products`);\n  }\n  getProductsbyCategory(subCategoryId) {\n    return this.http.get(`https://localhost:7052/api/Category/PrdouctsForCategory/${subCategoryId}`);\n  }\n  getParentCategories() {\n    return this.http.get('https://localhost:7052/api/Category/ParentCategories');\n  }\n  getSubcategories(parentCategoryId) {\n    return this.http.get(`https://localhost:7052/api/Category/subCategories/${parentCategoryId}`);\n  }\n  getProductsByParentCategoryId(parentCategoryId) {\n    return this.http.get(`https://localhost:7052/api/Category/PrdouctByParentCategory/${parentCategoryId}`);\n  }\n  getProductsUnique(id) {\n    return this.http.get(`https://localhost:7052/api/Products/UniqueProducts`);\n  }\n  getAllCategories() {\n    return this.http.get('https://localhost:7052/api/Category');\n  }\n  addProduct(AddProduct) {\n    console.log(AddProduct);\n    return this.http.post('https://localhost:7052/api/Products/Add', AddProduct);\n  }\n  getProductById(ProductId = 'b9cf58dc-81cf-478e-a45a-11313e09ac95') {\n    return this.http.get(`https://localhost:7052/api/Products/Update/${ProductId}`);\n  }\n  updateProductBy(UpdatedProduct) {\n    console.log(UpdatedProduct);\n    return this.http.put('https://localhost:7052/api/Products/Update', UpdatedProduct);\n  }\n  SaveImages(Images) {\n    console.log(Image);\n    const formData = new FormData();\n    for (let i = 0; i < Images.length; i++) {\n      formData.append('Images', Images[i], Image.name);\n      console.log(Images[i]);\n    }\n    return this.http.post('https://localhost:7052/api/Products/Images', formData);\n  }\n  DeleteProduct(productId) {\n    return this.http.delete(`${this.BASE_URL}Products/Delete/${productId}`);\n  }\n}\nProductsService.ɵfac = function ProductsService_Factory(t) {\n  return new (t || ProductsService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductsService,\n  factory: ProductsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ProductsService","constructor","http","BASE_URL","getProductsPaginagtion","page","counterPerPage","get","getProducts","getProductsbyCategory","subCategoryId","getParentCategories","getSubcategories","parentCategoryId","getProductsByParentCategoryId","getProductsUnique","id","getAllCategories","addProduct","AddProduct","console","log","post","getProductById","ProductId","updateProductBy","UpdatedProduct","put","SaveImages","Images","Image","formData","FormData","i","length","append","name","DeleteProduct","productId","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Courses\\ITI\\3-Months\\GP\\Admin\\Front-Admin-GP-ITI\\Front-Admin-GP\\src\\app\\services\\Products\\products.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from 'src/app/Models/Products/Product';\r\nimport ProductsReadDto from 'src/app/Models/Products/ProductsReadDto';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductsService {\r\n  constructor(private http: HttpClient) {}\r\n  BASE_URL = 'https://localhost:7052/api/'\r\n  getProductsPaginagtion(\r\n    page: number,\r\n    counterPerPage: number\r\n  ): Observable<ProductsReadDto> {\r\n    return this.http.get<ProductsReadDto>(\r\n      `https://localhost:7052/api/Products/Pagination/${page}/${counterPerPage}`\r\n    );\r\n  }\r\n\r\n  getProducts() {\r\n    return this.http.get(`${this.BASE_URL}Products`);\r\n  }\r\n\r\n  getProductsbyCategory(subCategoryId: any) {\r\n    return this.http.get(\r\n      `https://localhost:7052/api/Category/PrdouctsForCategory/${subCategoryId}`\r\n    );\r\n  }\r\n\r\n  getParentCategories(): Observable<any> {\r\n    return this.http.get(\r\n      'https://localhost:7052/api/Category/ParentCategories'\r\n    );\r\n  }\r\n\r\n  getSubcategories(parentCategoryId: any) {\r\n    return this.http.get(\r\n      `https://localhost:7052/api/Category/subCategories/${parentCategoryId}`\r\n    );\r\n  }\r\n\r\n  getProductsByParentCategoryId(parentCategoryId: any) {\r\n    return this.http.get(\r\n      `https://localhost:7052/api/Category/PrdouctByParentCategory/${parentCategoryId}`\r\n    );\r\n  }\r\n\r\n  getProductsUnique(id: any) {\r\n    return this.http.get(`https://localhost:7052/api/Products/UniqueProducts`);\r\n  }\r\n\r\n  getAllCategories() {\r\n    return this.http.get('https://localhost:7052/api/Category');\r\n  }\r\n\r\n  addProduct(AddProduct: any) {\r\n    console.log(AddProduct);\r\n    return this.http.post(\r\n      'https://localhost:7052/api/Products/Add',\r\n      AddProduct\r\n    );\r\n  }\r\n  getProductById(ProductId = 'b9cf58dc-81cf-478e-a45a-11313e09ac95') {\r\n    return this.http.get(\r\n      `https://localhost:7052/api/Products/Update/${ProductId}`\r\n    );\r\n  }\r\n  updateProductBy(UpdatedProduct: any) {\r\n    console.log(UpdatedProduct);\r\n    return this.http.put(\r\n      'https://localhost:7052/api/Products/Update',\r\n      UpdatedProduct\r\n    );\r\n  }\r\n  SaveImages(Images: FileList) {\r\n    console.log(Image);\r\n    const formData = new FormData();\r\n    for (let i = 0; i < Images.length; i++) {\r\n      formData.append('Images', Images[i], Image.name);\r\n      console.log(Images[i] as File);\r\n    }\r\n    return this.http.post(\r\n      'https://localhost:7052/api/Products/Images',\r\n      formData\r\n    );\r\n  }\r\n\r\n  DeleteProduct(productId:any){\r\n    return this.http.delete(`${this.BASE_URL}Products/Delete/${productId}`);\r\n  }\r\n}\r\n"],"mappings":";;AASA,OAAM,MAAOA,eAAe;EAC1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACxB,KAAAC,QAAQ,GAAG,6BAA6B;EADD;EAEvCC,sBAAsBA,CACpBC,IAAY,EACZC,cAAsB;IAEtB,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAClB,kDAAkDF,IAAI,IAAIC,cAAc,EAAE,CAC3E;EACH;EAEAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACN,IAAI,CAACK,GAAG,CAAC,GAAG,IAAI,CAACJ,QAAQ,UAAU,CAAC;EAClD;EAEAM,qBAAqBA,CAACC,aAAkB;IACtC,OAAO,IAAI,CAACR,IAAI,CAACK,GAAG,CAClB,2DAA2DG,aAAa,EAAE,CAC3E;EACH;EAEAC,mBAAmBA,CAAA;IACjB,OAAO,IAAI,CAACT,IAAI,CAACK,GAAG,CAClB,sDAAsD,CACvD;EACH;EAEAK,gBAAgBA,CAACC,gBAAqB;IACpC,OAAO,IAAI,CAACX,IAAI,CAACK,GAAG,CAClB,qDAAqDM,gBAAgB,EAAE,CACxE;EACH;EAEAC,6BAA6BA,CAACD,gBAAqB;IACjD,OAAO,IAAI,CAACX,IAAI,CAACK,GAAG,CAClB,+DAA+DM,gBAAgB,EAAE,CAClF;EACH;EAEAE,iBAAiBA,CAACC,EAAO;IACvB,OAAO,IAAI,CAACd,IAAI,CAACK,GAAG,CAAC,oDAAoD,CAAC;EAC5E;EAEAU,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACf,IAAI,CAACK,GAAG,CAAC,qCAAqC,CAAC;EAC7D;EAEAW,UAAUA,CAACC,UAAe;IACxBC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvB,OAAO,IAAI,CAACjB,IAAI,CAACoB,IAAI,CACnB,yCAAyC,EACzCH,UAAU,CACX;EACH;EACAI,cAAcA,CAACC,SAAS,GAAG,sCAAsC;IAC/D,OAAO,IAAI,CAACtB,IAAI,CAACK,GAAG,CAClB,8CAA8CiB,SAAS,EAAE,CAC1D;EACH;EACAC,eAAeA,CAACC,cAAmB;IACjCN,OAAO,CAACC,GAAG,CAACK,cAAc,CAAC;IAC3B,OAAO,IAAI,CAACxB,IAAI,CAACyB,GAAG,CAClB,4CAA4C,EAC5CD,cAAc,CACf;EACH;EACAE,UAAUA,CAACC,MAAgB;IACzBT,OAAO,CAACC,GAAG,CAACS,KAAK,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;MACtCF,QAAQ,CAACI,MAAM,CAAC,QAAQ,EAAEN,MAAM,CAACI,CAAC,CAAC,EAAEH,KAAK,CAACM,IAAI,CAAC;MAChDhB,OAAO,CAACC,GAAG,CAACQ,MAAM,CAACI,CAAC,CAAS,CAAC;;IAEhC,OAAO,IAAI,CAAC/B,IAAI,CAACoB,IAAI,CACnB,4CAA4C,EAC5CS,QAAQ,CACT;EACH;EAEAM,aAAaA,CAACC,SAAa;IACzB,OAAO,IAAI,CAACpC,IAAI,CAACqC,MAAM,CAAC,GAAG,IAAI,CAACpC,QAAQ,mBAAmBmC,SAAS,EAAE,CAAC;EACzE;;AAlFWtC,eAAe,C;mBAAfA,eAAe,EAAAwC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAf3C,eAAe,C;SAAfA,eAAe;EAAA4C,OAAA,EAAf5C,eAAe,CAAA6C,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}