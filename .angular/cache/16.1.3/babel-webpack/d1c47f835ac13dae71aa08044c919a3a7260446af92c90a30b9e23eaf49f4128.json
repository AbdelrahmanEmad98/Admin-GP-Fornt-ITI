{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CustomerService {\n  // ==============================================================\n  constructor(http) {\n    this.http = http;\n    this.isLoggedIn$ = new BehaviorSubject(false);\n    this.API_URL = 'https://localhost:7052/api/';\n  }\n  GetCustomerInfoById(CustomerId) {\n    return this.http.get(`https://localhost:7052/api/Customer/${CustomerId}`);\n  }\n  AddCustomer(data) {\n    return this.http.post(this.API_URL + 'Security/Register', data);\n  }\n  LoginCustomer(data) {\n    return this.http.post(this.API_URL + 'Security/Login', data);\n  }\n  ResetPassword(data) {\n    return this.http.patch(this.API_URL + 'Customer/RestPassword', data);\n  }\n  // ======================================================================\n  login(credentials) {\n    return this.http.post(this.API_URL + 'Security/Login', credentials).pipe(tap(tokenDto => {\n      this.isLoggedIn$.next(true);\n      localStorage.setItem('token', tokenDto.token);\n    }));\n  }\n  getTestData() {\n    return this.http.get(this.API_URL + 'Test/test');\n  }\n}\nCustomerService.ɵfac = function CustomerService_Factory(t) {\n  return new (t || CustomerService)(i0.ɵɵinject(i1.HttpClient));\n};\nCustomerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerService,\n  factory: CustomerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","tap","CustomerService","constructor","http","isLoggedIn$","API_URL","GetCustomerInfoById","CustomerId","get","AddCustomer","data","post","LoginCustomer","ResetPassword","patch","login","credentials","pipe","tokenDto","next","localStorage","setItem","token","getTestData","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Courses\\ITI\\3-Months\\GP\\Admin\\Front-Admin-GP-ITI\\Front-Admin-GP\\src\\app\\services\\Customers\\customer.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { LoginDto } from 'src/app/Models/LoginDto';\r\nimport { TokenDto } from 'src/app/Models/TokenDto';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomerService {\r\n  public isLoggedIn$ = new BehaviorSubject<boolean>(false);\r\n  // ==============================================================\r\n  constructor(private http: HttpClient) {}\r\n  private readonly API_URL = 'https://localhost:7052/api/';\r\n  GetCustomerInfoById(CustomerId: any) {\r\n    return this.http.get(`https://localhost:7052/api/Customer/${CustomerId}`);\r\n  }\r\n  AddCustomer(data: any) {\r\n    return this.http.post(this.API_URL + 'Security/Register', data);\r\n  }\r\n  LoginCustomer(data: any) {\r\n    return this.http.post(this.API_URL + 'Security/Login', data);\r\n  }\r\n  ResetPassword(data: any) {\r\n    return this.http.patch(this.API_URL + 'Customer/RestPassword', data);\r\n  }\r\n  \r\n  // ======================================================================\r\n  public login(credentials: LoginDto): Observable<TokenDto> {\r\n    return this.http\r\n      .post<TokenDto>(this.API_URL + 'Security/Login', credentials)\r\n      .pipe(\r\n        tap((tokenDto) => {\r\n          this.isLoggedIn$.next(true);\r\n          localStorage.setItem('token', tokenDto.token);\r\n        })\r\n      );\r\n  }\r\n\r\n  public getTestData(): Observable<string[]> {\r\n    return this.http.get<string[]>(this.API_URL + 'Test/test');\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;;;AAOvD,OAAM,MAAOC,eAAe;EAE1B;EACAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFjB,KAAAC,WAAW,GAAG,IAAIL,eAAe,CAAU,KAAK,CAAC;IAGvC,KAAAM,OAAO,GAAG,6BAA6B;EADjB;EAEvCC,mBAAmBA,CAACC,UAAe;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAC,uCAAuCD,UAAU,EAAE,CAAC;EAC3E;EACAE,WAAWA,CAACC,IAAS;IACnB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACN,OAAO,GAAG,mBAAmB,EAAEK,IAAI,CAAC;EACjE;EACAE,aAAaA,CAACF,IAAS;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACN,OAAO,GAAG,gBAAgB,EAAEK,IAAI,CAAC;EAC9D;EACAG,aAAaA,CAACH,IAAS;IACrB,OAAO,IAAI,CAACP,IAAI,CAACW,KAAK,CAAC,IAAI,CAACT,OAAO,GAAG,uBAAuB,EAAEK,IAAI,CAAC;EACtE;EAEA;EACOK,KAAKA,CAACC,WAAqB;IAChC,OAAO,IAAI,CAACb,IAAI,CACbQ,IAAI,CAAW,IAAI,CAACN,OAAO,GAAG,gBAAgB,EAAEW,WAAW,CAAC,CAC5DC,IAAI,CACHjB,GAAG,CAAEkB,QAAQ,IAAI;MACf,IAAI,CAACd,WAAW,CAACe,IAAI,CAAC,IAAI,CAAC;MAC3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACI,KAAK,CAAC;IAC/C,CAAC,CAAC,CACH;EACL;EAEOC,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACpB,IAAI,CAACK,GAAG,CAAW,IAAI,CAACH,OAAO,GAAG,WAAW,CAAC;EAC5D;;AAhCWJ,eAAe,C;mBAAfA,eAAe,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAf1B,eAAe,C;SAAfA,eAAe;EAAA2B,OAAA,EAAf3B,eAAe,CAAA4B,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}